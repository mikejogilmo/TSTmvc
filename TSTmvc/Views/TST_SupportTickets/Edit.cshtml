@model TST.Data.EF.TST_SupportTickets
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Support Ticket</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TicketId)
        @Html.HiddenFor(model => model.Description)
        @Html.HiddenFor(model => model.Subject)
        @Html.HiddenFor(model => model.DateSubmitted)
        @Html.HiddenFor(model => model.SubmittedByEmployeeId)

        <div class="form-group">
            @Html.LabelFor(model => model.SubmittedByEmployeeId, "Submitted By", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.TST_Employees.FullName
                @Html.ValidationMessageFor(model => model.SubmittedByEmployeeId, "", new { @class = "text-danger" })
            </div>
        </div>

        @if ((User.IsInRole("SuperAdmin")) || User.IsInRole("TechAdmin"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.TechId, "Tech Assigned", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.TST_Employees1 != null)
                    {
                        @Html.DropDownList("TechId", null, Model.TST_Employees1.FullName, htmlAttributes: new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.DropDownList("TechId", null, "Unassigned", htmlAttributes: new { @class = "form-control" })
                    }
                    @Html.ValidationMessageFor(model => model.TST_Employees1.FullName, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.Subject
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.Description
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateSubmitted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.DateSubmitted
            </div>
        </div>
        <div>
            <hr />
            <h3>Tech Notes</h3>
            <div id="notes">
                @*Display all of the current notes on the ticket*@
                @foreach (var note in Model.TST_TechNotes)
                {
                    <p>@note.TechNoteId by @note.TST_Employees.FullName on @String.Format("{0:D}", note.NoteSubmittedOn)</p>
                }
            </div>
            <br />

            @*Add a text area and a  button to get the note from the user*@
            <fieldset>
                <p>Note: <textarea id="noteText"></textarea></p>
                <input type="button" id="btnAddNote" value="Add Note" />
            </fieldset>
            <hr />
            <script>
                $(function () {

                    //click event for the button
                    $('#btnAddNote').click(function () {

                        //get the note text
                        var note = $("#noteText").val();

                        $.ajax({
                            url: "/TST_SupportTickets/AddTechNote?ticketId=@Model.TicketId&note=" + note,
                            success: function (data) {
                                //display the new note at the bottom of the existing list of notes
                                $("#notes").append("<p>" + data.TechNotes + " by " +
                                    data.Tech + " on " + data.Date + "</p>");
                                //clear the note box
                                $("#noteText").val('');
                            }
                        });
                    });
                });
            </script>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PriorityId, "Priority Level", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PriorityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusId, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" id="alert" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <button type="button" class="btn btn-default">@Html.ActionLink("Back to List", "Index")</button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
